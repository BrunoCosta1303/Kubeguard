#! Persistent volume claim to store all AdGuard Home configuration data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: adguardhome
  namespace: kubeguard
  labels:
    app: kubeguard
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---
#! Deployment definition for AdGuard Home for a single instance container,
#! storing configuration data on a persistent volume claim.
#! The management web interface on port 3000 and the DNS port 53
#! are be made accessible via Kubernetes service definition, see further below.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adguardhome
  namespace: kubeguard
  labels:
    app: kubeguard
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  selector:
    matchLabels:
      app: kubeguard
  template:
    metadata:
      labels:
        app: kubeguard
    spec:
      containers:
      - name: adguardhome
        image: adguard/adguardhome:latest
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
        ports:
        - containerPort: 53
          protocol: UDP
        - containerPort: 853
          protocol: UDP
        - containerPort: 3000
          protocol: TCP
        resources:
          requests:
            cpu: "200m"
            memory: "256Mi"
          limits:
            cpu: "512m"
            memory: "728Mi"
        volumeMounts:
        - name: adguardhome-config
          mountPath: /opt/adguardhome/conf
        - name: adguardhome-logs
          mountPath: /opt/adguardhome/work
      volumes:
      - name: adguardhome-config
        persistentVolumeClaim:
          claimName: adguardhome
      - name: adguardhome-logs
        emptyDir: {}

# ---
# #! Service definition for all Kubeguard Components, being: 
# apiVersion: v1
# kind: Service
# metadata:
#   name: adguard-dns-service
#   namespace: kubeguard
# spec:
#   selector:
#     app: kubeguard
#   ports:
#   - name: domain-name-service
#     port: 53
#     targetPort: 53



# ---
# #! Service definition for all Kubeguard Components, being: 
# apiVersion: v1
# kind: Service
# metadata:
#   name: adguard-console-service
#   namespace: kubeguard
# spec:
#   selector:
#     app: kubeguard
#   ports:
#   - name: adguard-console
#     port: 3000
#     protocol: TCP
#     targetPort: 3000
#   type: NodePort

